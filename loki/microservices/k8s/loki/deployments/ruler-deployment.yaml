apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki-ruler
  namespace: loki
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/component: ruler
    app.kubernetes.io/version: "${LOKI_VERSION}"
    app.kubernetes.io/instance: loki-dev
    app.kubernetes.io/part-of: logging-stack
    app.kubernetes.io/managed-by: kubectl
    environment: development
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki-ruler
  template:
    metadata:
      labels:
        app: loki-ruler
    spec:
      securityContext:
        fsGroup: 10001
      initContainers:
      - name: init-permissions
        image: busybox:1.35
        command: ['sh', '-c', 'chown -R 10001:10001 /loki']
        volumeMounts:
        - name: ruler-data
          mountPath: /loki
      containers:
      - name: loki-ruler
        image: grafana/loki:${LOKI_VERSION}
        args:
        - -config.file=/etc/loki/ruler.yaml
        - -target=ruler
        - -config.expand-env=true
        ports:
        - containerPort: 3100
        - containerPort: 9095
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "200m"
            memory: "512Mi"
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-creds
              key: accesskey
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: minio-creds
              key: secretkey
        volumeMounts:
        - name: config-volume
          mountPath: /etc/loki
          readOnly: true
        - name: ruler-data
          mountPath: /loki
        securityContext:
          runAsNonRoot: true
          runAsUser: 10001
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      volumes:
      - name: config-volume
        configMap:
          name: ruler-config
      - name: ruler-data
        persistentVolumeClaim:
          claimName: ruler-data
